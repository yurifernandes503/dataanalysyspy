================================================================================
                    DATAINSIGHT AI - GUIA PASSO A PASSO COMPLETO
================================================================================

üìã √çNDICE:
1. Prepara√ß√£o do Ambiente
2. Instala√ß√£o das Depend√™ncias
3. Configura√ß√£o da API Gemini
4. Execu√ß√£o da Aplica√ß√£o
5. Como Usar Cada Funcionalidade
6. Solu√ß√£o de Problemas
7. Estrutura do C√≥digo

================================================================================
                            1. PREPARA√á√ÉO DO AMBIENTE
================================================================================

PASSO 1.1: VERIFICAR PYTHON
----------------------------
1. Abrir terminal/prompt de comando
2. Digitar: python --version
3. Deve mostrar Python 3.8 ou superior
4. Se n√£o tiver Python, baixar de: https://python.org/downloads/

PASSO 1.2: CRIAR PASTA DO PROJETO
----------------------------------
1. Criar pasta: mkdir datainsight-ai-python
2. Entrar na pasta: cd datainsight-ai-python
3. Verificar localiza√ß√£o: pwd (Linux/Mac) ou cd (Windows)

================================================================================
                            2. INSTALA√á√ÉO DAS DEPEND√äNCIAS
================================================================================

PASSO 2.1: INSTALAR BIBLIOTECAS PRINCIPAIS
-------------------------------------------
Copiar e colar este comando no terminal:

pip install streamlit pandas numpy plotly google-generativeai openpyxl

PASSO 2.2: VERIFICAR INSTALA√á√ÉO
--------------------------------
python -c "import streamlit, pandas, plotly; print('‚úÖ Bibliotecas instaladas!')"

PASSO 2.3: CRIAR ARQUIVO REQUIREMENTS.TXT
------------------------------------------
Criar arquivo requirements.txt com o conte√∫do:
streamlit==1.29.0
pandas==2.1.3
numpy==1.24.3
plotly==5.17.0
google-generativeai==0.3.2
openpyxl==3.1.2

================================================================================
                            3. CONFIGURA√á√ÉO DA API GEMINI
================================================================================

PASSO 3.1: OBTER CHAVE API
---------------------------
1. Ir para: https://makersuite.google.com/app/apikey
2. Fazer login com conta Google
3. Clicar em "Create API Key"
4. Copiar a chave (formato: AIzaSyC...)

PASSO 3.2: CONFIGURAR CHAVE (M√âTODO 1 - VARI√ÅVEL DE AMBIENTE)
--------------------------------------------------------------
Windows:
set GEMINI_API_KEY=AIzaSyC...sua_chave_aqui

Linux/Mac:
export GEMINI_API_KEY=AIzaSyC...sua_chave_aqui

PASSO 3.3: CONFIGURAR CHAVE (M√âTODO 2 - ARQUIVO SECRETS)
---------------------------------------------------------
1. Criar pasta: mkdir .streamlit
2. Criar arquivo: .streamlit/secrets.toml
3. Adicionar conte√∫do:
   GEMINI_API_KEY = "AIzaSyC...sua_chave_aqui"

================================================================================
                            4. EXECU√á√ÉO DA APLICA√á√ÉO
================================================================================

PASSO 4.1: CRIAR ARQUIVO APP.PY
--------------------------------
1. Copiar todo o c√≥digo do arquivo app.py fornecido
2. Salvar como app.py na pasta do projeto
3. Verificar se o arquivo foi salvo corretamente

PASSO 4.2: EXECUTAR APLICA√á√ÉO
------------------------------
1. No terminal, na pasta do projeto, digitar:
   streamlit run app.py

2. Aguardar mensagem:
   "You can now view your Streamlit app in your browser."
   "Local URL: http://localhost:8501"

PASSO 4.3: ACESSAR NO NAVEGADOR
--------------------------------
1. Abrir navegador (Chrome, Firefox, Edge)
2. Ir para: http://localhost:8501
3. A aplica√ß√£o deve carregar automaticamente

================================================================================
                            5. COMO USAR CADA FUNCIONALIDADE
================================================================================

FUNCIONALIDADE 1: CARREGAR DADOS
---------------------------------
Op√ß√£o A - Dados de Exemplo:
1. Clicar em "üé≤ Dados de Exemplo" na barra lateral
2. Aguardar carregamento
3. Dados ser√£o gerados automaticamente

Op√ß√£o B - Upload de Arquivo:
1. Clicar em "Browse files" na barra lateral
2. Selecionar arquivo CSV, Excel ou JSON
3. Aguardar upload e processamento

FUNCIONALIDADE 2: DASHBOARD
----------------------------
1. Ir para aba "üìä Dashboard"
2. Visualizar m√©tricas principais (cards coloridos)
3. Analisar estat√≠sticas num√©ricas
4. Verificar qualidade dos dados

FUNCIONALIDADE 3: GR√ÅFICOS
---------------------------
1. Ir para aba "üìà Gr√°ficos"
2. Visualizar 6 tipos de gr√°ficos:
   - Vendas por Regi√£o (Barras)
   - Distribui√ß√£o por Categoria (Pizza)
   - Vendas por M√™s (Linha)
   - Vendas vs Satisfa√ß√£o (Scatter)
   - Distribui√ß√£o de Vendas (Histograma)
   - Vendas por Produto (Box Plot)
3. Interagir com gr√°ficos (zoom, hover, etc.)

FUNCIONALIDADE 4: IA INSIGHTS
------------------------------
1. Ir para aba "ü§ñ IA"
2. Verificar status da IA (deve estar verde)
3. Clicar em "üöÄ An√°lise Completa" para an√°lise autom√°tica
4. Ou fazer pergunta personalizada na caixa de texto
5. Clicar em "ü§ñ Perguntar"

FUNCIONALIDADE 5: EXPLORAR DADOS
---------------------------------
1. Ir para aba "üìã Dados"
2. Usar filtros para explorar dados
3. Ajustar n√∫mero de linhas exibidas
4. Fazer download dos dados filtrados

================================================================================
                            6. SOLU√á√ÉO DE PROBLEMAS
================================================================================

PROBLEMA 1: GR√ÅFICOS N√ÉO APARECEM
----------------------------------
Solu√ß√£o:
1. Verificar se dados foram carregados
2. Atualizar p√°gina (F5)
3. Verificar console do navegador (F12)
4. Reinstalar plotly: pip install --upgrade plotly

PROBLEMA 2: ERRO "MODULE NOT FOUND"
------------------------------------
Solu√ß√£o:
1. Reinstalar depend√™ncias: pip install -r requirements.txt
2. Verificar vers√£o do Python: python --version
3. Usar ambiente virtual se necess√°rio

PROBLEMA 3: IA N√ÉO FUNCIONA
----------------------------
Solu√ß√£o:
1. Verificar chave API do Gemini
2. Testar conex√£o com internet
3. Verificar se chave est√° correta
4. Tentar reconfigurar a chave

PROBLEMA 4: ERRO DE UPLOAD
---------------------------
Solu√ß√£o:
1. Verificar formato do arquivo (CSV, Excel, JSON)
2. Verificar se arquivo n√£o est√° corrompido
3. Tentar com arquivo menor
4. Verificar encoding (UTF-8)

PROBLEMA 5: APLICA√á√ÉO N√ÉO INICIA
---------------------------------
Solu√ß√£o:
1. Verificar se est√° na pasta correta
2. Verificar se app.py existe
3. Reinstalar streamlit: pip install --upgrade streamlit
4. Verificar porta 8501 n√£o est√° em uso

================================================================================
                            7. ESTRUTURA DO C√ìDIGO
================================================================================

SE√á√ÉO 1: IMPORTA√á√ïES E CONFIGURA√á√ïES
-------------------------------------
- Importa todas as bibliotecas necess√°rias
- Configura p√°gina do Streamlit
- Define CSS customizado

SE√á√ÉO 2: FUN√á√ïES AUXILIARES
----------------------------
- configure_gemini(): Configura API do Gemini
- generate_sample_data(): Gera dados de exemplo
- create_charts(): Cria todos os gr√°ficos
- analyze_with_gemini(): Faz an√°lise com IA

SE√á√ÉO 3: INTERFACE SIDEBAR
---------------------------
- Status da IA
- Upload de arquivos
- Bot√£o para dados de exemplo
- Informa√ß√µes do dataset

SE√á√ÉO 4: PROCESSAMENTO DE ARQUIVOS
-----------------------------------
- L√™ arquivos CSV, Excel, JSON
- Armazena dados no session_state
- Trata erros de upload

SE√á√ÉO 5: INTERFACE PRINCIPAL
-----------------------------
- 4 abas principais (Dashboard, Gr√°ficos, IA, Dados)
- Cada aba com funcionalidades espec√≠ficas
- Layout responsivo

SE√á√ÉO 6: TELA INICIAL
----------------------
- Apresenta√ß√£o da aplica√ß√£o
- Instru√ß√µes de uso
- Bot√£o para come√ßar

================================================================================
                            8. COMANDOS √öTEIS
================================================================================

COMANDOS B√ÅSICOS:
-----------------
# Instalar depend√™ncias
pip install streamlit pandas numpy plotly google-generativeai openpyxl

# Executar aplica√ß√£o
streamlit run app.py

# Parar aplica√ß√£o
Ctrl + C (no terminal)

# Verificar vers√µes
pip list

# Atualizar biblioteca
pip install --upgrade nome_da_biblioteca

COMANDOS DE DIAGN√ìSTICO:
------------------------
# Verificar Python
python --version

# Verificar pip
pip --version

# Testar importa√ß√µes
python -c "import streamlit; print('Streamlit OK')"

# Verificar porta
netstat -an | findstr 8501

================================================================================
                            9. DICAS IMPORTANTES
================================================================================

DICA 1: PERFORMANCE
--------------------
- Use dados com menos de 10.000 registros para melhor performance
- Feche outras abas do navegador
- Use dados de exemplo para testes iniciais

DICA 2: SEGURAN√áA
------------------
- Nunca compartilhe sua chave API do Gemini
- Use arquivo secrets.toml para chaves
- N√£o commite chaves no Git

DICA 3: DESENVOLVIMENTO
-----------------------
- Use Ctrl+C para parar a aplica√ß√£o
- Salve altera√ß√µes e recarregue a p√°gina
- Use st.rerun() para atualizar interface

DICA 4: DADOS
--------------
- CSV deve ter cabe√ßalhos na primeira linha
- Excel deve ter dados na primeira planilha
- JSON deve ser array de objetos

================================================================================
                            10. PR√ìXIMOS PASSOS
================================================================================

AP√ìS INSTALA√á√ÉO B√ÅSICA:
------------------------
1. Testar com dados de exemplo
2. Fazer upload de seus pr√≥prios dados
3. Explorar todas as funcionalidades
4. Configurar IA para insights
5. Exportar relat√≥rios

MELHORIAS FUTURAS:
------------------
- Adicionar mais tipos de gr√°ficos
- Implementar machine learning
- Criar relat√≥rios autom√°ticos
- Adicionar mais formatos de dados
- Melhorar interface mobile

================================================================================
                                    FIM
================================================================================

üìû SUPORTE:
Se tiver problemas, verifique:
1. Vers√£o do Python (3.8+)
2. Instala√ß√£o das depend√™ncias
3. Configura√ß√£o da chave API
4. Conex√£o com internet

‚úÖ CHECKLIST FINAL:
‚ñ° Python 3.8+ instalado
‚ñ° Depend√™ncias instaladas
‚ñ° Chave API configurada
‚ñ° Arquivo app.py criado
‚ñ° Aplica√ß√£o executando
‚ñ° Gr√°ficos funcionando
‚ñ° IA respondendo

üéâ PARAB√âNS! Sua aplica√ß√£o est√° funcionando!
